{"version":3,"file":"static/js/193.20019b2b.chunk.js","mappings":"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","sources":["modules/EpisodeDescriptionModule/components/Loader.tsx","modules/EpisodeDescriptionModule/EpisodeDescription.module.tsx","pages/EpisodePage/EpisodePage.tsx","../node_modules/@mui/icons-material/ArrowBackIosNew.js"],"sourcesContent":["import { Box, Divider, Skeleton, Stack } from \"@mui/material\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Box sx={{ px: { md: 3, xs: 1 } }}>\r\n            {/* Title */}\r\n            <Skeleton variant=\"text\" sx={{ mx: \"auto\", width: \"min(95%, 300px)\", height: 50, mb: 1 }} />\r\n\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: { md: \"row\", xs: \"column\" },\r\n                    gap: 3,\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                {/* img */}\r\n                <Box>\r\n                    <Skeleton\r\n                        variant=\"rounded\"\r\n                        sx={{\r\n                            height: { md: \"60vh\", xs: \"500px\" },\r\n                            width: { md: \"min(35vw, 400px)\", xs: \"min(100%, 400px)\" },\r\n                            mx: \"auto\",\r\n                        }}\r\n                    />\r\n                </Box>\r\n\r\n                {/* table */}\r\n                <Stack direction={\"column\"} spacing={1} flexGrow={1} divider={<Divider />}>\r\n                    <Skeleton\r\n                        variant=\"text\"\r\n                        sx={{\r\n                            height: 35,\r\n                            width: { md: \"65%\", xs: \"80%\" },\r\n                            alignSelf: { md: \"start\", xs: \"center\" },\r\n                        }}\r\n                    />\r\n                    <Skeleton\r\n                        variant=\"text\"\r\n                        sx={{\r\n                            height: 35,\r\n                            width: { md: \"50%\", xs: \"85%\" },\r\n                            alignSelf: { md: \"start\", xs: \"center\" },\r\n                        }}\r\n                    />\r\n                    <Skeleton\r\n                        variant=\"text\"\r\n                        sx={{\r\n                            height: 35,\r\n                            width: { md: \"60%\", xs: \"90%\" },\r\n                            alignSelf: { md: \"start\", xs: \"center\" },\r\n                        }}\r\n                    />\r\n                    <Skeleton\r\n                        variant=\"text\"\r\n                        sx={{\r\n                            height: 35,\r\n                            width: { md: \"55%\", xs: \"70%\" },\r\n                            alignSelf: { md: \"start\", xs: \"center\" },\r\n                        }}\r\n                    />\r\n                    <Skeleton\r\n                        variant=\"text\"\r\n                        sx={{\r\n                            height: 35,\r\n                            width: { md: \"65%\", xs: \"80%\" },\r\n                            alignSelf: { md: \"start\", xs: \"center\" },\r\n                        }}\r\n                    />\r\n                    <Skeleton\r\n                        variant=\"text\"\r\n                        sx={{\r\n                            height: 35,\r\n                            width: { md: \"50%\", xs: \"90%\" },\r\n                            alignSelf: { md: \"start\", xs: \"center\" },\r\n                        }}\r\n                    />\r\n                    <Skeleton\r\n                        variant=\"text\"\r\n                        sx={{\r\n                            height: 35,\r\n                            width: { md: \"60%\", xs: \"60%\" },\r\n                            alignSelf: { md: \"start\", xs: \"center\" },\r\n                        }}\r\n                    />\r\n                </Stack>\r\n            </Box>\r\n\r\n            {/* Storyline */}\r\n            <Box mt={2}>\r\n                <Skeleton variant=\"text\" height={25} />\r\n                <Skeleton variant=\"text\" height={25} />\r\n                <Skeleton variant=\"text\" height={25} width={\"60%\"} />\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import { Box, Table, TableBody, TableCell, TableContainer, TableRow, Typography } from \"@mui/material\";\r\nimport { Fragment } from \"react\";\r\nimport { MovieApi1 } from \"../../services/MovieApi1\";\r\nimport Loader from \"./components/Loader\";\r\n\r\ninterface EpisodeDescriptionModuleProps {\r\n    episodeId: string;\r\n}\r\n\r\nconst EpisodeDescriptionModule: React.FC<EpisodeDescriptionModuleProps> = ({ episodeId }) => {\r\n    const { currentData, isLoading } = MovieApi1.useGetEpisodeQuery(episodeId);\r\n\r\n    const tableData = [\r\n        { name: \"Released:\", value: currentData?.Released },\r\n        { name: \"Country\", value: currentData?.Country },\r\n        { name: \"Language\", value: currentData?.Language },\r\n        { name: \"Genre\", value: currentData?.Genre },\r\n        { name: \"Director\", value: currentData?.Director },\r\n        { name: \"Writer\", value: currentData?.Writer },\r\n        { name: \"Actors:\", value: currentData?.Actors },\r\n        { name: \"Rated\", value: currentData?.Rated },\r\n        { name: \"Awards\", value: currentData?.Awards },\r\n    ];\r\n\r\n    if (isLoading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            {/* Title */}\r\n            <Typography\r\n                variant=\"h4\"\r\n                sx={{\r\n                    textAlign: \"center\",\r\n                    fontSize: { md: \"3rem\", sm: \"2rem\", xs: \"1.7rem\" },\r\n                    mb: 2,\r\n                }}\r\n            >\r\n                {currentData?.Title || \"Title\"} ({currentData?.Year || \"year\"})\r\n            </Typography>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: { md: \"row\", xs: \"column\" },\r\n                    gap: 2,\r\n                    mb: { sm: 2, xs: 0 },\r\n                    flexGrow: 1,\r\n                }}\r\n            >\r\n                <img\r\n                    style={{\r\n                        width: \"min(100%, 400px)\",\r\n                        height: \"fit-content\",\r\n                        objectFit: \"contain\",\r\n                        borderRadius: \"8px\",\r\n                        margin: \"0 auto\",\r\n                    }}\r\n                    src={currentData?.Poster}\r\n                    alt={currentData?.Title}\r\n                    loading=\"lazy\"\r\n                />\r\n\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    {/* About */}\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        sx={{ textAlign: { md: \"start\", xs: \"center\" }, ml: { md: 2, xs: 0 } }}\r\n                    >\r\n                        About Film\r\n                    </Typography>\r\n                    <TableContainer>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableBody>\r\n                                {tableData.map((row, index) => (\r\n                                    <Fragment key={index}>\r\n                                        {row.value && row.value !== \"N/A\" && (\r\n                                            <TableRow\r\n                                                key={index}\r\n                                                sx={{\r\n                                                    \"&:last-child td, &:last-child th\": { border: 0 },\r\n                                                }}\r\n                                            >\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.name}\r\n                                                </TableCell>\r\n                                                <TableCell>{row.value}</TableCell>\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </Fragment>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Box>\r\n            </Box>\r\n\r\n            {/* Plot */}\r\n            {currentData?.Plot && currentData.Plot !== \"N/A\" && (\r\n                <Box>\r\n                    <Typography variant=\"body1\">Storyline: {currentData.Plot}</Typography>\r\n                </Box>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EpisodeDescriptionModule;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport { MovieApi1 } from \"../../services/MovieApi1\";\r\n\r\nimport EpisodeDescriptionModule from \"../../modules/EpisodeDescriptionModule/EpisodeDescription.module\";\r\n\r\nimport DefaultPageContainer from \"../../components/Containers/DefaultPageContainer\";\r\n\r\n/* Icons */\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBackIosNew\";\r\n\r\nconst SeriesEpisodePage: React.FC = () => {\r\n    const params = useParams<{ episodeId: string }>();\r\n\r\n    const { currentData, isError } = MovieApi1.useGetEpisodeQuery(params.episodeId || \"\");\r\n\r\n    return (\r\n        <DefaultPageContainer>\r\n            <EpisodeDescriptionModule episodeId={params.episodeId || \"\"} />\r\n            {(currentData?.Response === \"False\" || isError) && (\r\n                <Box>\r\n                    {/* Fix me ? */}\r\n                    <Button\r\n                        size=\"small\"\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                            console.log(\"Fix me\");\r\n                        }}\r\n                    >\r\n                        <ArrowBackIcon sx={{ mr: 1 }} />\r\n                        <Typography variant=\"h6\">Back</Typography>\r\n                    </Button>\r\n                    <Typography variant=\"h4\" align=\"center\">\r\n                        Episode not found\r\n                    </Typography>\r\n                </Box>\r\n            )}\r\n        </DefaultPageContainer>\r\n    );\r\n};\r\n\r\nexport default SeriesEpisodePage;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNew');\nexports.default = _default;"],"names":["_jsxs","Box","sx","px","md","xs","children","_jsx","Skeleton","variant","mx","width","height","mb","display","flexDirection","gap","Stack","direction","spacing","flexGrow","divider","Divider","alignSelf","mt","_ref","episodeId","_MovieApi1$useGetEpis","MovieApi1","useGetEpisodeQuery","currentData","isLoading","tableData","name","value","Released","Country","Language","Genre","Director","Writer","Actors","Rated","Awards","Loader","Typography","textAlign","fontSize","sm","Title","Year","style","objectFit","borderRadius","margin","src","Poster","alt","loading","ml","TableContainer","Table","TableBody","map","row","index","Fragment","TableRow","border","TableCell","component","scope","Plot","params","useParams","isError","DefaultPageContainer","EpisodeDescriptionModule","Response","Button","size","color","onClick","console","log","ArrowBackIcon","mr","align","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
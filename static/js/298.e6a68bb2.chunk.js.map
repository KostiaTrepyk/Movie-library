{"version":3,"file":"static/js/298.e6a68bb2.chunk.js","mappings":"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","sources":["helpers/getObjFromSearchParams.ts","helpers/objToSearchParams.tsx","modules/GenresModule/components/Loader.tsx","modules/GenresModule/Genres.module.tsx","pages/GenresPage/compoonents/MovieListItem.tsx","pages/GenresPage/compoonents/MovieList.tsx","pages/GenresPage/GenresPage.tsx","../node_modules/@mui/icons-material/ArrowBackIosNew.js","../node_modules/@mui/icons-material/ArrowForwardIos.js"],"sourcesContent":["export function getObjFromSearchParams(str: string): Record<string, string> {\r\n    if (!str) return {};\r\n\r\n    const result: Record<string, string> = {};\r\n\r\n    const queryArray: string[][] = str\r\n        .slice(1)\r\n        .split(\"&\")\r\n        .map((r) => r.split(\"=\"));\r\n\r\n    queryArray.forEach((queryProp) => {\r\n        result[queryProp[0]] = queryProp[1];\r\n    });\r\n\r\n    return result;\r\n}\r\n","export function objToSearchParams(obj: Record<string, string | number>): string {\r\n    let query: string = \"?\";\r\n\r\n    for (const name in obj) {\r\n        if (obj[name]) {\r\n            query += `${name}=${obj[name]}&`;\r\n        }\r\n    }\r\n    query = query.slice(0, query.length - 1);\r\n\r\n    return query;\r\n}\r\n","import { Box, Skeleton } from \"@mui/material\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 0.5 }}>\r\n            <Skeleton variant=\"text\" height={30} />\r\n            <Skeleton variant=\"text\" height={30} />\r\n            <Skeleton variant=\"text\" height={30} />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Button, Box } from \"@mui/material\";\r\nimport { MovieApi2 } from \"../../services/MovieApi2\";\r\n\r\nimport Loader from \"./components/Loader\";\r\n\r\ninterface GenresModuleProps {\r\n    activeGenre?: string;\r\n    onChange?: (genre: string | undefined) => void;\r\n}\r\n\r\n/**  fix me */\r\nconst GenresModule: React.FC<GenresModuleProps> = ({ activeGenre, onChange }) => {\r\n    const { data, isFetching } = MovieApi2.useGetAllGenresQuery(undefined);\r\n\r\n    /* fix me */\r\n    function genreClickHandler(e: any) {\r\n        onChange && onChange(e.target.value);\r\n    }\r\n\r\n    if (isFetching) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 1, justifyContent: \"space-between\" }}\r\n            onClick={genreClickHandler}\r\n        >\r\n            {data?.results.map((genre) => (\r\n                <React.Fragment key={genre}>\r\n                    {genre && (\r\n                        <Button\r\n                            value={genre}\r\n                            color={activeGenre === genre ? \"primary\" : \"inherit\"}\r\n                            variant={activeGenre === genre ? \"contained\" : \"text\"}\r\n                        >\r\n                            {genre}\r\n                        </Button>\r\n                    )}\r\n                </React.Fragment>\r\n            ))}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GenresModule;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { grey, orange } from \"@mui/material/colors\";\r\nimport { BaseInfoResultEntity } from \"../../../models/MovieApi2\";\r\n\r\ninterface MovieItemProps {\r\n    movieData: BaseInfoResultEntity;\r\n    onClick: (moiveId: string) => void;\r\n}\r\n\r\nconst MovieListItem: React.FC<MovieItemProps> = ({ movieData, onClick }) => {\r\n    return (\r\n        <Box\r\n            key={movieData._id}\r\n            sx={{\r\n                boxSizing: \"border-box\",\r\n                px: 3,\r\n                py: 2,\r\n                cursor: \"pointer\",\r\n                width: \"min(100%, 340px)\",\r\n                transition: \"0.3s transform\",\r\n                \"&:hover\": {\r\n                    transform: \"scale(95%)\",\r\n                },\r\n            }}\r\n            onClick={() => onClick(movieData.id)}\r\n        >\r\n            <img\r\n                src={\r\n                    movieData.primaryImage &&\r\n                    movieData.primaryImage?.url &&\r\n                    movieData.primaryImage?.width < 2000 /* ??? */\r\n                        ? movieData.primaryImage?.url\r\n                        : \"https://thumbs.dreamstime.com/b/ikona-paska-filmu-film-programu-word-wyizolowany-na-bia%C5%82ym-tle-proste-logo-wektorowe-230410953.jpg\"\r\n                }\r\n                alt={movieData.primaryImage?.caption.plainText}\r\n                style={{\r\n                    width: \"100%\",\r\n                    borderRadius: \"15px 15px 10px 10px\",\r\n                    aspectRatio: 9 / 14,\r\n                    objectFit: \"cover\",\r\n                }}\r\n                loading=\"lazy\"\r\n            />\r\n\r\n            <Box sx={{ display: \"flex\", textAlign: \"center\", pt: 1, gap: 2 }}>\r\n                <Typography flexGrow={1}>\r\n                    {movieData.titleText.text} {movieData.releaseYear?.year}\r\n                </Typography>\r\n                <Typography\r\n                    bgcolor={grey[800]}\r\n                    color={orange[600]}\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                        py: 0.8,\r\n                        px: 1,\r\n                        height: \"min-content\",\r\n                        borderRadius: 2,\r\n                    }}\r\n                >\r\n                    {movieData.titleType.text.toUpperCase()}\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default MovieListItem;\r\n","import { Box } from \"@mui/material\";\r\nimport { BaseInfoResultEntity } from \"../../../models/MovieApi2\";\r\n\r\nimport MovieListItem from \"./MovieListItem\";\r\n\r\ninterface MovieListProps {\r\n    movies: BaseInfoResultEntity[];\r\n    onMovieClick: (movieID: string) => void;\r\n}\r\n\r\nconst MovieList: React.FC<MovieListProps> = ({ movies, onMovieClick }) => {\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"center\",\r\n                gap: { lg: 2, xs: 1 },\r\n            }}\r\n        >\r\n            {movies.map((movie) => (\r\n                <MovieListItem key={movie._id} movieData={movie} onClick={onMovieClick} />\r\n            ))}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default MovieList;\r\n","import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Box, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport { getObjFromSearchParams } from \"../../helpers/getObjFromSearchParams\";\r\nimport { MovieApi2 } from \"../../services/MovieApi2\";\r\nimport { objToSearchParams } from \"../../helpers/objToSearchParams\";\r\nimport { DESCRIPTIONROUTE, GENRESROUTE } from \"../../core/Router/utils/routes\";\r\n\r\nimport GenresModule from \"../../modules/GenresModule/Genres.module\";\r\n\r\nimport DefaultPageContainer from \"../../components/Containers/DefaultPageContainer\";\r\nimport MovieList from \"./compoonents/MovieList\";\r\n\r\n// Icons\r\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\n\r\n/* Default */\r\nconst defaultGenre = \"Drama\";\r\n\r\nconst GenresPage = () => {\r\n    const params = getObjFromSearchParams(useLocation().search);\r\n\r\n    const { data, isError, isFetching, isSuccess } = MovieApi2.useGetByGenreQuery({\r\n        genre: params.genre || defaultGenre,\r\n        page: params.page || 1,\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    function genreClickHandler(genre: string | undefined) {\r\n        if (!genre) return;\r\n        navigate(GENRESROUTE.path + \"/?genre=\" + genre + \"&page=\" + 1);\r\n    }\r\n\r\n    function movieClickHandler(id: string) {\r\n        console.log(id);\r\n\r\n        navigate(DESCRIPTIONROUTE.path.replace(\":id\", id));\r\n    }\r\n\r\n    /* Pagination */\r\n    function changePage(value: number) {\r\n        const searchParams = objToSearchParams({\r\n            genre: params.genre || defaultGenre,\r\n            page: +params.page + value || 2,\r\n        });\r\n\r\n        navigate(GENRESROUTE.path + \"/\" + searchParams);\r\n    }\r\n\r\n    return (\r\n        <DefaultPageContainer loading={isFetching}>\r\n            <Box mb={2}>\r\n                <GenresModule activeGenre={params.genre || defaultGenre} onChange={genreClickHandler} />\r\n            </Box>\r\n\r\n            {isSuccess && <MovieList movies={data.results} onMovieClick={movieClickHandler} />}\r\n\r\n            {isError && (\r\n                <Typography variant=\"h4\" align=\"center\" sx={{ mt: 3 }}>\r\n                    Notwork error! Try later.\r\n                </Typography>\r\n            )}\r\n\r\n            {/*  Pagination ? */}\r\n            {data && !isError && (\r\n                <Stack direction=\"row\" spacing={2} justifyContent={\"center\"} mt={2}>\r\n                    <IconButton\r\n                        disabled={isFetching || isError || +params.page <= 1 || !params.page}\r\n                        onClick={() => changePage(-1)}\r\n                    >\r\n                        <ArrowBackIosNewIcon />\r\n                    </IconButton>\r\n                    <IconButton disabled={isFetching || isError || !data?.next} onClick={() => changePage(1)}>\r\n                        <ArrowForwardIosIcon />\r\n                    </IconButton>\r\n                </Stack>\r\n            )}\r\n        </DefaultPageContainer>\r\n    );\r\n};\r\n\r\nexport default GenresPage;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNew');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\nexports.default = _default;"],"names":["getObjFromSearchParams","str","result","slice","split","map","r","forEach","queryProp","objToSearchParams","obj","query","name","concat","length","_jsxs","Box","sx","display","flexDirection","gap","children","_jsx","Skeleton","variant","height","_ref","activeGenre","onChange","_MovieApi2$useGetAllG","MovieApi2","useGetAllGenresQuery","undefined","data","isFetching","Loader","flexWrap","justifyContent","onClick","e","target","value","results","genre","React","Button","color","_movieData$primaryIma","_movieData$primaryIma2","_movieData$primaryIma3","_movieData$primaryIma4","_movieData$releaseYea","movieData","boxSizing","px","py","cursor","width","transition","transform","id","src","primaryImage","url","alt","caption","plainText","style","borderRadius","aspectRatio","objectFit","loading","textAlign","pt","Typography","flexGrow","titleText","text","releaseYear","year","bgcolor","grey","orange","titleType","toUpperCase","_id","movies","onMovieClick","lg","xs","movie","MovieListItem","defaultGenre","params","useLocation","search","_MovieApi2$useGetByGe","useGetByGenreQuery","page","isError","isSuccess","navigate","useNavigate","changePage","searchParams","GENRESROUTE","path","DefaultPageContainer","mb","GenresModule","MovieList","console","log","DESCRIPTIONROUTE","replace","align","mt","Stack","direction","spacing","IconButton","disabled","ArrowBackIosNewIcon","next","ArrowForwardIosIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
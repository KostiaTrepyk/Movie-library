{"version":3,"file":"static/js/93.c72fb7f8.chunk.js","mappings":"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","sources":["pages/AuthPage/AuthPage.tsx"],"sourcesContent":["import { Box, Button, FormGroup, Tab, Tabs, TextField } from \"@mui/material\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { LOGINROUTE, REGISTRATIONROUTE } from \"../../core/Router/utils/routes\";\r\n\r\nenum TabPanelValues {\r\n    LoginForm = 0,\r\n    RegistrationForm = 1,\r\n}\r\n\r\nconst AuthPage = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    const isLoginForm: boolean = location.pathname === LOGINROUTE.path;\r\n    const tab = isLoginForm ? TabPanelValues.LoginForm : TabPanelValues.RegistrationForm;\r\n\r\n    function toggleTabs(e: React.SyntheticEvent<Element, Event>, newTab: TabPanelValues) {\r\n        TabPanelValues.LoginForm === newTab && navigate(LOGINROUTE.path);\r\n        TabPanelValues.RegistrationForm === newTab && navigate(REGISTRATIONROUTE.path);\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                minHeight: { sm: \"calc(100svh - 64px)\", xs: \"calc(100svh - 56px)\" },\r\n            }}\r\n        >\r\n            <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n                <Tabs value={tab} onChange={toggleTabs} aria-label=\"basic tabs example\">\r\n                    <Tab label=\"Login\" {...a11yProps(TabPanelValues.LoginForm)} />\r\n                    <Tab label=\"Registration\" {...a11yProps(TabPanelValues.RegistrationForm)} />\r\n                </Tabs>\r\n            </Box>\r\n            <TabPanel value={tab} index={TabPanelValues.LoginForm}>\r\n                <form>\r\n                    <FormGroup\r\n                        sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            margin: \"0 auto\",\r\n                            gap: { md: 3, xs: 2 },\r\n                            width: \"85%\",\r\n                            maxWidth: \"450px\",\r\n                            minHeight: \"300px\" /* Error */,\r\n                        }}\r\n                    >\r\n                        <TextField type=\"email\" label=\"Email\" autoComplete=\"email\" required />\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            autoComplete=\"current-password\"\r\n                            required\r\n                        />\r\n                        <Button sx={{ alignSelf: \"end\" }} type=\"submit\">\r\n                            Login\r\n                        </Button>\r\n                    </FormGroup>\r\n                </form>\r\n            </TabPanel>\r\n            <TabPanel value={tab} index={TabPanelValues.RegistrationForm}>\r\n                <form>\r\n                    <FormGroup\r\n                        sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            margin: \"0 auto\",\r\n                            gap: { md: 3, xs: 2 },\r\n                            width: \"85%\",\r\n                            maxWidth: \"450px\",\r\n                            minHeight: \"300px\" /* Error */,\r\n                        }}\r\n                    >\r\n                        <TextField label=\"Login\" autoComplete=\"username\" required />\r\n                        <TextField type=\"email\" label=\"Email\" autoComplete=\"email\" required />\r\n                        <TextField type=\"password\" label=\"Password\" autoComplete=\"new-password\" required />\r\n                        <Button sx={{ alignSelf: \"end\" }} type=\"submit\">\r\n                            Registration\r\n                        </Button>\r\n                    </FormGroup>\r\n                </form>\r\n            </TabPanel>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default AuthPage;\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: number;\r\n    value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Box\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            sx={{ width: \"100%\" }}\r\n            {...other}\r\n        >\r\n            {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: number) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n"],"names":["TabPanelValues","TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_jsx","Box","_objectSpread","role","hidden","id","concat","sx","width","p","a11yProps","location","useLocation","navigate","useNavigate","tab","pathname","LOGINROUTE","path","LoginForm","RegistrationForm","_jsxs","display","flexDirection","alignItems","justifyContent","minHeight","sm","xs","borderBottom","borderColor","Tabs","onChange","e","newTab","REGISTRATIONROUTE","Tab","label","FormGroup","margin","gap","md","maxWidth","TextField","type","autoComplete","required","Button","alignSelf"],"sourceRoot":""}